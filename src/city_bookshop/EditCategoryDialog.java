/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package city_bookshop;

import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author HP
 */
public class EditCategoryDialog extends javax.swing.JDialog {

    /**
     * Creates new form EditCategoryDialog
     */
    private String cName;
    private JTextField categoryName;
    private JButton saveButton;

    public EditCategoryDialog(JFrame parent, String cName) {
        super(parent, "Edit category", true);

        this.cName = cName;

        // Initialize components
        categoryName = new JTextField(20);
        saveButton = new JButton("Save");

        // Set layout and add components
        setLayout(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();

        gbc.insets = new Insets(10, 10, 10, 10);

        // Add label and text field for category name
        gbc.gridx = 0;
        gbc.gridy = 0;
        add(new JLabel("Category Name:"), gbc);

        gbc.gridx = 1;
        gbc.gridy = 0;
        add(categoryName, gbc);

        // Add save button
        gbc.gridx = 1;
        gbc.gridy = 1;
        add(saveButton, gbc);

        // Set up button action listener
        saveButton.addActionListener((ActionEvent e) -> {
            saveCategory();
        });

        // Set dialog properties
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        pack();
        setLocationRelativeTo(null); // Center the dialog
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    // Method to handle the save button click
    private void saveCategory() {
        String category = categoryName.getText().trim();

        // Validate input
        if (category.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Category name cannot be empty.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Add the category if it doesn't already exist
        if (Category.isCategoryExists(category)) {
            JOptionPane.showMessageDialog(this, "Category already exists.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            Category.updateCategory(cName, category);
            JOptionPane.showMessageDialog(this, "Category updated successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
            dispose(); // Close the dialog

        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
