/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package city_bookshop;

import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class books_pg extends javax.swing.JFrame {

    /**
     * Creates new form books_pg
     */
    protected Bookshop bs = new Bookshop();

    public books_pg() throws IOException {
        initComponents();

        // Populate category dropdowns
        populateCategoryDropdowns();

        // Populate price dropdowns
        populatePriceRangeDropdown();

        updateTable(bs.getBooks());

        jButton2.addActionListener((e) -> {
            try {
                updateTable(bs.getBooks());
            } catch (IOException ex) {
                Logger.getLogger(books_pg.class.getName()).log(Level.SEVERE, null, ex);
            }
        });

        jComboBox1.addActionListener((e) -> {
            try {
                String selectedCategory = (String) jComboBox1.getSelectedItem();
                if (!"Select a category".equals(selectedCategory)) {
                    updateTable(bs.getBooksByCategory(selectedCategory));
                } else {
                    updateTable(bs.getBooks()); // Show all books if "Select" is chosen
                }
            } catch (IOException ex) {
                Logger.getLogger(books_pg.class.getName()).log(Level.SEVERE, null, ex);
            }
        });

        // Search button listener
        jButton1.addActionListener((e) -> {
            try {
                filterBooks();
            } catch (IOException ex) {
                Logger.getLogger(books_pg.class.getName()).log(Level.SEVERE, null, ex);
            }
        });

        // Filter books by selected price range
        jComboBox2.addActionListener((e) -> {
            try {
                filterBooks();
            } catch (IOException ex) {
                Logger.getLogger(books_pg.class.getName()).log(Level.SEVERE, null, ex);
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("Search");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton2.setText("Refresh");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(57, 57, 57)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(63, 63, 63)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 939, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(94, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 132, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jButton2)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(books_pg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(books_pg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(books_pg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(books_pg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new books_pg().setVisible(true);
            } catch (IOException ex) {
                Logger.getLogger(books_pg.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    /**
     *
     * @param books
     */
    public void updateTable(List<Book> books) {
        // Define column names (make sure they match the JTable's column names)
        String[] columnNames = {"Name", "Author", "Price", "Category", "Stock"};

        // Convert list of users to data array
        Object[][] data = new Object[books.size()][5];
        for (int i = 0; i < books.size(); i++) {
            Book book = books.get(i);
            data[i][0] = book.getTitle();
            data[i][1] = book.getAuthor();
            data[i][2] = book.getPrice();
            data[i][3] = book.getCategory().getName();
            data[i][4] = book.getStock();
        }

        // Update the DefaultTableModel
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setDataVector(data, columnNames);

    }

    private void populateCategoryDropdowns() throws IOException {
        List<Category> categories = Category.getAllCategories();
        DefaultComboBoxModel<String> categoryModel1 = new DefaultComboBoxModel<>();

        // Add "Select" as the default item
        categoryModel1.addElement("Select a category");

        // Add each category name to the dropdown models
        for (Category category : categories) {
            categoryModel1.addElement(category.getName());
        }

        // Set the models to the JComboBoxes
        jComboBox1.setModel(categoryModel1);
    }

    private void populatePriceRangeDropdown() {
        DefaultComboBoxModel<String> priceRangeModel = new DefaultComboBoxModel<>();
        priceRangeModel.addElement("Price range");
        priceRangeModel.addElement("0 - 1000");
        priceRangeModel.addElement("1000 - 3000");
        priceRangeModel.addElement("3000 - 5000");
        priceRangeModel.addElement("5000 - 8000");
        priceRangeModel.addElement("8000 - 10000");

        jComboBox2.setModel(priceRangeModel);
    }

    private void filterBooks() throws IOException {
        String selectedCategory = (String) jComboBox1.getSelectedItem();
        String searchText = jTextField1.getText().trim().toLowerCase();
        String selectedPriceRange = (String) jComboBox2.getSelectedItem();

        List<Book> filteredBooks = bs.getBooks();

        if (!"Select a category".equals(selectedCategory)) {
            filteredBooks = bs.getBooksByCategory(selectedCategory);
        }

        if (!searchText.isEmpty()) {
            filteredBooks = bs.searchBooksByTitle(filteredBooks, searchText);
        }

        if (!"Price range".equals(selectedPriceRange)) {
            filteredBooks = bs.filterBooksByPriceRange(filteredBooks, selectedPriceRange);
        }

        updateTable(filteredBooks);
    }

    protected JTable getJTable1() {
        return jTable1;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
